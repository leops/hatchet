'name': 'Hatchet'
'scopeName': 'text.hatchet'
'fileTypes': [
    'hct'
]
'patterns': [
    {
        'name': 'meta.block.hatchet'
        'begin': '(auto)\\s*(\\{)'
        'beginCaptures':
            '1':
                'name': 'keyword.reserved.hatchet'
            '2':
                'name': 'punctuation.section.block.begin.hatchet'
        'patterns': [
            {
                'include': '#statements'
            }
        ]
        'end': '\\}'
        'endCaptures':
            '0':
                'name': 'punctuation.section.block.end.hatchet'
    }
    {
        'name': 'meta.block.hatchet'
        'begin': '(relay)\\s+([A-Za-z0-9_\\-\\$@]+)\\s*(\\{)'
        'beginCaptures':
            '1':
                'name': 'keyword.reserved.hatchet'
            '2':
                'name': 'variable.other.global.hatchet'
            '3':
                'name': 'punctuation.section.block.begin.hatchet'
        'patterns': [
            {
                'include': '#statements'
            }
        ]
        'end': '\\}'
        'endCaptures':
            '0':
                'name': 'punctuation.section.block.end.hatchet'
    }
    {
        'name': 'meta.block.hatchet'
        'match': '(let)\\s+([A-Za-z0-9_\\-\\$@]+)\\s*='
        'captures':
            '1':
                'name': 'keyword.reserved.hatchet'
            '2':
                'name': 'variable.assignment.hatchet'
            '3':
                'name': 'punctuation.separator.key-value.hatchet'
    }
    {
        'include': '#statements'
    }
    {
        'include': '#expressions'
    }
    {
        'include': '#comments'
    }
]
'repository':
    'statements':
        'patterns': [
            {
                'match': '([A-Za-z0-9_\\-\\$@]+)(:)'
                'captures':
                    '1':
                        'name': 'variable.other.global.hatchet'
                    '2':
                        'name': 'punctuation.definition.separator.hatchet'
            }
            {
                'match': '([A-Za-z0-9_\\-\\$@]+)(\\.)'
                'captures':
                    '1':
                        'name': 'variable.other.global.hatchet'
                    '2':
                        'name': 'punctuation.definition.separator.hatchet'
            }
            {
                'name': 'meta.method-call.hatchet'
                'begin': '([A-Za-z0-9_\\-\\$@]+)(\\()'
                'beginCaptures':
                    '1':
                        'name': 'entity.name.function.hatchet'
                    '2':
                        'name': 'punctuation.definition.parameters.begin.hatchet'
                'patterns': [
                    {
                        'include': '#strings'
                    }
                    {
                        'include': '#numbers'
                    }
                ]
                'end': '\\)'
                'endCaptures':
                    '0':
                        'name': 'punctuation.definition.parameters.end.hatchet'
            }
            {
                'name': 'meta.block.hatchet'
                'begin': '(delay)\\s+((?:[0-9]+\\.?[0-9]*)|(?:\\.[0-9]+))\\s*(\\{)'
                'beginCaptures':
                    '1':
                        'name': 'keyword.reserved.hatchet'
                    '2':
                        'name': 'constant.numeric.hatchet'
                    '3':
                        'name': 'punctuation.section.block.begin.hatchet'
                'end': '\\}'
                'patterns': [
                    {
                        'include': '#statements'
                    }
                ]
                'endCaptures':
                    '0':
                        'name': 'punctuation.section.block.end.hatchet'
            }
            {
                'match': '(for)\\s+([A-Za-z0-9_\\-\\$@]+)\\s+(in)'
                'captures':
                    '1':
                        'name': 'keyword.control.hatchet'
                    '2':
                        'name': 'meta.definition.variable.hatchet'
                    '3':
                        'name': 'keyword.control.hatchet'
            }
            {
                'name': 'meta.block.hatchet'
                'begin': '([A-Za-z0-9_\\-\\$@]+)\\s*(\\{)'
                'beginCaptures':
                    '1':
                        'name': 'entity.other.attribute-name.hatchet'
                    '2':
                        'name': 'punctuation.section.block.begin.hatchet'
                'patterns': [
                    {
                        'include': '$base'
                    }
                ]
                'end': '\\}'
                'endCaptures':
                    '0':
                        'name': 'punctuation.section.block.end.hatchet'
            }
            {
                'include': '#comments'
            }
        ]
    'expressions':
        'patterns': [
            {
                'name': 'meta.block.hatchet'
                'begin': '\\['
                'endCaptures':
                    '0':
                        'name': 'punctuation.section.block.begin.hatchet'
                'patterns': [
                    {
                        'include': '#expressions'
                    }
                ]
                'end': '\\]'
                'endCaptures':
                    '0':
                        'name': 'punctuation.section.block.end.hatchet'
            }
            {
                'name': 'variable.other.global.hatchet'
                'match': '((?:[A-Za-z0-9_\\-\\$@]+(?:\\.[A-Za-z0-9_\\-\\$@]+)*:)?(?:[A-Za-z0-9_\\-\\$@]+\\.)*)([A-Za-z0-9_\\-\\$@]+)'
            }
        ]
    'comments':
        'patterns': [
            {
                'name': 'comment.line.double-slash.hatchet'
                'begin': '//'
                'beginCaptures':
                    '0':
                        'name': 'punctuation.definition.comment.hatchet'
                'end': '\\n'
            }
        ]
    'strings':
        'patterns': [
            {
                'begin': '"'
                'beginCaptures':
                    '0':
                        'name': 'punctuation.definition.string.begin.hatchet'
                'end': '"'
                'endCaptures':
                    '0':
                        'name': 'punctuation.definition.string.end.hatchet'
                'name': 'string.quoted.double.hatchet'
            }
        ]
    'numbers':
        'patterns': [
            {
                'match': '\\b([0-9]+\\.?[0-9]*)|(\\.[0-9]+)\\b'
                'name': 'constant.numeric.hatchet'
            }
        ]
